=begin
Ruby InsightVM API Client

OpenAPI spec version: 3
Contact: support@rapid7.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.0

=end

require 'date'

module Rapid7VmConsole
  # 
  class SiteCredential
    # Specify the type of service to authenticate as well as all of the information required by that service. <div class=\"properties\">  <div class=\"property-info\">  <span class=\"property-name\">service</span> <span class=\"param-type\">string</span>  <div class=\"param-enum\">  <span class=\"param-enum-value string\">\"as400\"</span>  <span class=\"param-enum-value string\">\"cifs\"</span>  <span class=\"param-enum-value string\">\"cifshash\"</span>  <span class=\"param-enum-value string\">\"cvs\"</span>  <span class=\"param-enum-value string\">\"db2\"</span>  <span class=\"param-enum-value string\">\"ftp\"</span>  <span class=\"param-enum-value string\">\"http\"</span>  <span class=\"param-enum-value string\">\"ms-sql\"</span>  <span class=\"param-enum-value string\">\"mysql\"</span>  <span class=\"param-enum-value string\">\"notes\"</span>  <span class=\"param-enum-value string\">\"oracle\"</span>  <span class=\"param-enum-value string\">\"pop\"</span>  <span class=\"param-enum-value string\">\"postgresql\"</span>  <span class=\"param-enum-value string\">\"remote-exec\"</span>  <span class=\"param-enum-value string\">\"snmp\"</span>  <span class=\"param-enum-value string\">\"snmpv3\"</span>  <span class=\"param-enum-value string\">\"ssh\"</span>  <span class=\"param-enum-value string\">\"ssh-key\"</span>  <span class=\"param-enum-value string\">\"sybase\"</span>  <span class=\"param-enum-value string\">\"telnet\"</span>  </div>  <div class=\"redoc-markdown-block\">The type of service to authenticate with.</div> </div>  </div>  The following are the names of the valid values for service:  | Value         | Service                                         |  | ------------- | ----------------------------------------------- |  | `as400`       | IBM AS/400                                      |  | `cifs`        | Microsoft Windows/Samba (SMB/CIFS)              |  | `cifshash`    | Microsoft Windows/Samba LM/NTLM Hash (SMB/CIFS) |  | `cvs`         | Concurrent Versioning System (CVS)              |  | `db2`         | DB2                                             |  | `ftp`         | File Transfer Protocol (FTP)                    |  | `http`        | Web Site HTTP Authentication                    |  | `ms-sql`      | Microsoft SQL Server                            |  | `mysql`       | MySQL Server                                    |  | `notes`       | Lotus Notes/Domino                              |  | `oracle`      | Oracle                                          |  | `pop`         | Post Office Protocol (POP)                      |  | `postgresql`  | PostgreSQL                                      |  | `remote-exec` | Remote Execution                                |  | `snmp`        | Simple Network Management Protocol v1/v2c       |  | `snmpv3`      | Simple Network Management Protocol v3           |  | `ssh`         | Secure Shell (SSH)                              |  | `ssh-key`     | Secure Shell (SSH) Public Key                   |  | `sybase`      | Sybase SQL Server                               |  | `telnet`      | Telnet                                          |   <p>The following is a specification of supported credential properties for each type of service. These properties are to be specified within the <code>account</code> object.</p>  `as400` supported properties: <div class=\"properties\">  <div class=\"property-info\">  <span class=\"property-name\">domain</span> <span class=\"param-type\">string</span>  <div class=\"redoc-markdown-block\"><p>The address of the domain.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">username</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The user name for the account that will be used for authenticating.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">password</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The password for the account that will be used for authenticating. <strong>Note: This property is not returned in responses for security.</strong></p></div> </div>  </div>  `cifs` supported properties: <div class=\"properties\">  <div class=\"property-info\">  <span class=\"property-name\">domain</span> <span class=\"param-type\">string</span>  <div class=\"redoc-markdown-block\"><p>The address of the domain.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">username</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The user name for the account that will be used for authenticating.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">password</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The password for the account that will be used for authenticating. <strong>Note: This property is not returned in responses for security.</strong></p></div> </div>  </div>  `cifshash` supported properties: <div class=\"properties\">  <div class=\"property-info\">  <span class=\"property-name\">domain</span> <span class=\"param-type\">string</span>  <div class=\"redoc-markdown-block\"><p>The address of the domain.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">username</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The user name for the account that will be used for authenticating.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">ntlmHash</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The NTLM password hash. <strong>Note: This property is not returned in responses for security.</strong></p></div> </div>  </div>  `cvs` supported properties: <div class=\"properties\">  <div class=\"property-info\">  <span class=\"property-name\">domain</span> <span class=\"param-type\">string</span>  <div class=\"redoc-markdown-block\"><p>The address of the domain.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">username</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The user name for the account that will be used for authenticating.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">password</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The password for the account that will be used for authenticating. <strong>Note: This property is not returned in responses for security.</strong></p></div> </div>  </div>  `db2` supported properties: <div class=\"properties\">  <div class=\"property-info\">  <span class=\"property-name\">database</span> <span class=\"param-type\">string</span>  <div class=\"redoc-markdown-block\"><p>The name of the database.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">username</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The user name for the account that will be used for authenticating.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">password</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The password for the account that will be used for authenticating. <strong>Note: This property is not returned in responses for security.</strong></p></div> </div>  </div>  `ftp` supported properties: <div class=\"properties\">  <div class=\"property-info\">  <span class=\"property-name\">username</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The user name for the account that will be used for authenticating.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">password</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The password for the account that will be used for authenticating. <strong>Note: This property is not returned in responses for security.</strong></p></div> </div>  </div>  `http` supported properties: <div class=\"properties\">  <div class=\"property-info\">  <span class=\"property-name\">realm</span> <span class=\"param-type\">string</span>  <div class=\"redoc-markdown-block\"><p>The realm.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">username</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The user name for the account that will be used for authenticating.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">password</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The password for the account that will be used for authenticating. <strong>Note: This property is not returned in responses for security.</strong></p></div> </div>  </div>  `ms-sql` supported properties: <div class=\"properties\">  <div class=\"property-info\">  <span class=\"property-name\">database</span> <span class=\"param-type\">string</span>  <div class=\"redoc-markdown-block\"><p>The name of the database. If not specified, a default database name will be used during authentication.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">useWindowsAuthentication</span> <span class=\"param-type\">boolean</span>  <div class=\"redoc-markdown-block\"> <p> Boolean flag signaling whether to connect to the database using Windows authentication. When set to <code>true</code>, Windows authentication is attempted; when set to <code>false</code>, SQL authentication is attempted.</p> </div> </div>  <div class=\"property-info\">  <span class=\"property-name\">domain</span> <span class=\"param-type\">string</span>  <div class=\"redoc-markdown-block\"><p>The address of the domain. This property cannot be specified unless property <code>useWindowsAuthentication</code> is set to <code>true</code>.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">username</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The user name for the account that will be used for authenticating.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">password</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The password for the account that will be used for authenticating. <strong>Note: This property is not returned in responses for security.</strong></p></div> </div>  </div>  `mysql` supported properties: <div class=\"properties\">  <div class=\"property-info\">  <span class=\"property-name\">database</span> <span class=\"param-type\">string</span>  <div class=\"redoc-markdown-block\"><p>The name of the database. If not specified, a default database name will be used during authentication.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">username</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The user name for the account that will be used for authenticating.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">password</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The Notes ID password. <strong>Note: This property is not returned in responses for security.</strong></p></div> </div>  </div>  `notes` supported properties: <div class=\"properties\">  <div class=\"property-info\">  <span class=\"property-name\">notesIDPassword</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The password for the account that will be used for authenticating. <strong>Note: This property is not returned in responses for security.</strong></p></div> </div>  </div>  `oracle` supported properties: <div class=\"properties\">  <div class=\"property-info\">  <span class=\"property-name\">sid</span> <span class=\"param-type\">string</span>  <div class=\"redoc-markdown-block\"><p>The name of the database. If not specified, a default database name will be used during authentication.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">username</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The user name for the account that will be used for authenticating.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">password</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The password for the account that will be used for authenticating. <strong>Note: This property is not returned in responses for security.</strong></p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">enumerateSids</span> <span class=\"param-type\">boolean</span>  <div class=\"redoc-markdown-block\"> <p> Boolean flag instructing the scan engine to attempt to enumerate SIDs from your environment. If set to <code>true</code>, set the Oracle Net Listener password in property <code>oracleListenerPassword</code>.</p> </div> </div>  <div class=\"property-info\">  <span class=\"property-name\">oracleListenerPassword</span> <span class=\"param-type\">string</span>  <div class=\"redoc-markdown-block\"><p>The Oracle Net Listener password. Used to enumerate SIDs from your environment.</p></div> </div>  </div>  `pop` supported properties: <div class=\"properties\">  <div class=\"property-info\">  <span class=\"property-name\">username</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The user name for the account that will be used for authenticating.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">password</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The password for the account that will be used for authenticating. <strong>Note: This property is not returned in responses for security.</strong></p></div> </div>  </div>  `postgresql` supported properties: <div class=\"properties\">  <div class=\"property-info\">  <span class=\"property-name\">database</span> <span class=\"param-type\">string</span>  <div class=\"redoc-markdown-block\"><p>The name of the database.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">username</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The user name for the account that will be used for authenticating.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">password</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The password for the account that will be used for authenticating. <strong>Note: This property is not returned in responses for security.</strong></p></div> </div>  </div>  `remote-exec` supported properties: <div class=\"properties\">  <div class=\"property-info\">  <span class=\"property-name\">username</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The user name for the account that will be used for authenticating.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">password</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The password for the account that will be used for authenticating. <strong>Note: This property is not returned in responses for security.</strong></p></div> </div>  </div>  `snmp` supported properties: <div class=\"properties\">  <div class=\"property-info\">  <span class=\"property-name\">communityName</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The community name that will be used for authenticating. <strong>Note: This property is not returned in responses for security.</strong></p></div> </div>  </div>  `snmpv3` supported properties: <div class=\"properties\">  <div class=\"property-info\">  <span class=\"property-name\">authenticationType</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"param-enum\">  <span class=\"param-enum-value string\">\"no-authentication\"</span>  <span class=\"param-enum-value string\">\"md5\"</span>  <span class=\"param-enum-value string\">\"sha\"</span>  </div>  <div class=\"redoc-markdown-block\"><p>The authentication protocols available to use in SNMP v3.</p></div> </div> <div class=\"property-info\">  <span class=\"property-name\">username</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The user name for the account that will be used for authenticating.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">password</span> <span class=\"param-type\">string</span>  <div class=\"redoc-markdown-block\"> <p> The password for the account that will be used for authenticating. Is required when the property <code>authenticationType</code> is set to valid value other than <code>\"no-authentication\"</code>. <strong>Note: This property is not returned in responses for security.</strong></p> </div> </div>  <div class=\"property-info\">  <span class=\"property-name\">privacyType</span> <span class=\"param-type\">string</span>  <div class=\"param-enum\">  <span class=\"param-enum-value string\">\"no-privacy\"</span>  <span class=\"param-enum-value string\">\"des\"</span>  <span class=\"param-enum-value string\">\"aes-128\"</span>  <span class=\"param-enum-value string\">\"aes-192\"</span>  <span class=\"param-enum-value string\">\"aes-192-with-3-des-key-extension\"</span>  <span class=\"param-enum-value string\">\"aes-256\"</span>  <span class=\"param-enum-value string\">\"aes-265-with-3-des-key-extension\"</span>  </div>  <div class=\"redoc-markdown-block\"><p>The privacy protocols available to use in SNMP v3.</p></div> </div> <div class=\"property-info\">  <span class=\"property-name\">privacyPassword</span> <span class=\"param-type\">string</span>  <div class=\"redoc-markdown-block\"> <p> The privacy password for the account that will be used for authenticating. Is required when the property <code>authenticationType</code> is set to valid value other than <code>\"no-authentication\"</code> and when the <code>privacyType</code> is set to a valid value other than code>\"no-privacy\"</code>. <strong>Note: This property is not returned in responses for security.</strong></p> </div> </div>  </div>  `ssh` supported properties: <div class=\"properties\">  <div class=\"property-info\">  <span class=\"property-name\">username</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The user name for the account that will be used for authenticating.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">password</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The password for the account that will be used for authenticating. <strong>Note: This property is not returned in responses for security.</strong></p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">permissionElevation</span> <span class=\"param-type\">string</span>  <div class=\"param-enum\">  <span class=\"param-enum-value string\">\"none\"</span>  <span class=\"param-enum-value string\">\"sudo\"</span>  <span class=\"param-enum-value string\">\"sudosu\"</span>  <span class=\"param-enum-value string\">\"su\"</span>  <span class=\"param-enum-value string\">\"pbrun\"</span>  <span class=\"param-enum-value string\">\"privileged-exec\"</span>  </div>  <div class=\"redoc-markdown-block\"> <p> Elevate scan engine permissions to administrative or root access, which is necessary to obtain certain data during the scan. Defaults to <code>\"none\"</code> if not specified. </p> </div> </div> <div class=\"property-info\">  <span class=\"property-name\">permissionElevationUsername</span> <span class=\"param-type\">string</span>  <div class=\"redoc-markdown-block\"> <p> The user name for the account with elevated permissions. This property must not be specified when the property <code>permissionElevation</code> is set to either <code>\"none\"</code> or <code>\"pbrun\"</code>; otherwise the property is required.</p> </div> </div>  <div class=\"property-info\">  <span class=\"property-name\">password</span> <span class=\"param-type\">string</span>  <div class=\"redoc-markdown-block\"> <p> The password for the account with elevated permissions. This property must not be specified when the property <code>permissionElevation</code> is set to either <code>\"none\"</code> or <code>\"pbrun\"</code>; otherwise the property is required.<strong>Note: This property is not returned in responses for security.</strong></p> </div> </div>  </div>  `ssh-key` supported properties: <div class=\"properties\">  <div class=\"property-info\">  <span class=\"property-name\">username</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The user name for the account that will be used for authenticating.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">privateKeyPassword</span> <span class=\"param-type\">string</span>  <div class=\"redoc-markdown-block\"><p>The password for private key. <strong>Note: This property is not returned in responses for security.</strong></p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">pemKey</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The PEM-format private key. <strong>Note: This property is not returned in responses for security.</strong></p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">permissionElevation</span> <span class=\"param-type\">string</span>  <div class=\"param-enum\">  <span class=\"param-enum-value string\">\"none\"</span>  <span class=\"param-enum-value string\">\"sudo\"</span>  <span class=\"param-enum-value string\">\"sudosu\"</span>  <span class=\"param-enum-value string\">\"su\"</span>  <span class=\"param-enum-value string\">\"pbrun\"</span>  <span class=\"param-enum-value string\">\"privileged-exec\"</span>  </div>  <div class=\"redoc-markdown-block\"> <p> Elevate scan engine permissions to administrative or root access, which is necessary to obtain certain data during the scan. Defaults to <code>\"none\"</code> if not specified. </p> </div> </div> <div class=\"property-info\">  <span class=\"property-name\">permissionElevationUsername</span> <span class=\"param-type\">string</span>  <div class=\"redoc-markdown-block\"> <p> The user name for the account with elevated permissions. This property must not be specified when the property <code>permissionElevation</code> is set to either <code>\"none\"</code> or <code>\"pbrun\"</code>; otherwise the property is required.</p> </div> </div>  <div class=\"property-info\">  <span class=\"property-name\">password</span> <span class=\"param-type\">string</span>  <div class=\"redoc-markdown-block\"> <p> The password for the account with elevated permissions. This property must not be specified when the property <code>permissionElevation</code> is set to either <code>\"none\"</code> or <code>\"pbrun\"</code>; otherwise the property is required.<strong>Note: This property is not returned in responses for security.</strong></p> </div> </div>  </div>  `sybase` supported properties: <div class=\"properties\">  <div class=\"property-info\">  <span class=\"property-name\">database</span> <span class=\"param-type\">string</span>  <div class=\"redoc-markdown-block\"><p>The name of the database. If not specified, a default database name will be used during authentication.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">useWindowsAuthentication</span> <span class=\"param-type\">boolean</span>  <div class=\"redoc-markdown-block\"> <p> Boolean flag signaling whether to connect to the database using Windows authentication. When set to <code>true</code>, Windows authentication is attempted; when set to <code>false</code>, SQL authentication is attempted.</p> </div> </div>  <div class=\"property-info\">  <span class=\"property-name\">domain</span> <span class=\"param-type\">string</span>  <div class=\"redoc-markdown-block\"><p>The address of the domain. This property cannot be specified unless property <code>useWindowsAuthentication</code> is set to <code>true</code>.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">username</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The user name for the account that will be used for authenticating.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">password</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The password for the account that will be used for authenticating. <strong>Note: This property is not returned in responses for security.</strong></p></div> </div>  </div>  `telnet` supported properties: <div class=\"properties\">  <div class=\"property-info\">  <span class=\"property-name\">username</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The user name for the account that will be used for authenticating.</p></div> </div>  <div class=\"property-info\">  <span class=\"property-name\">password</span> <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>  <div class=\"redoc-markdown-block\"><p>The password for the account that will be used for authenticating. <strong>Note: This property is not returned in responses for security.</strong></p></div> </div>  </div>  
    attr_accessor :account

    # The description of the credential.
    attr_accessor :description

    # Flag indicating whether the credential is enabled for use during the scan.
    attr_accessor :enabled

    # The host name or IP address that you want to restrict the credentials to.
    attr_accessor :host_restriction

    # The identifier of the credential.
    attr_accessor :id

    attr_accessor :links

    # The name of the credential.
    attr_accessor :name

    # Further restricts the credential to attempt to authenticate on a specific port. The port can only be restricted if the property `hostRestriction` is specified.
    attr_accessor :port_restriction

    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        :'account' => :'account',
        :'description' => :'description',
        :'enabled' => :'enabled',
        :'host_restriction' => :'hostRestriction',
        :'id' => :'id',
        :'links' => :'links',
        :'name' => :'name',
        :'port_restriction' => :'portRestriction'
      }
    end

    # Attribute type mapping.
    def self.swagger_types
      {
        :'account' => :'Account',
        :'description' => :'String',
        :'enabled' => :'BOOLEAN',
        :'host_restriction' => :'String',
        :'id' => :'Integer',
        :'links' => :'Array<Link>',
        :'name' => :'String',
        :'port_restriction' => :'Integer'
      }
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(attributes = {})
      return unless attributes.is_a?(Hash)

      # convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h| h[k.to_sym] = v }

      if attributes.has_key?(:'account')
        self.account = attributes[:'account']
      end

      if attributes.has_key?(:'description')
        self.description = attributes[:'description']
      end

      if attributes.has_key?(:'enabled')
        self.enabled = attributes[:'enabled']
      end

      if attributes.has_key?(:'hostRestriction')
        self.host_restriction = attributes[:'hostRestriction']
      end

      if attributes.has_key?(:'id')
        self.id = attributes[:'id']
      end

      if attributes.has_key?(:'links')
        if (value = attributes[:'links']).is_a?(Array)
          self.links = value
        end
      end

      if attributes.has_key?(:'name')
        self.name = attributes[:'name']
      end

      if attributes.has_key?(:'portRestriction')
        self.port_restriction = attributes[:'portRestriction']
      end
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array.new
      if @account.nil?
        invalid_properties.push('invalid value for "account", account cannot be nil.')
      end

      if @name.nil?
        invalid_properties.push('invalid value for "name", name cannot be nil.')
      end

      if !@port_restriction.nil? && @port_restriction > 65535
        invalid_properties.push('invalid value for "port_restriction", must be smaller than or equal to 65535.')
      end

      if !@port_restriction.nil? && @port_restriction < 1
        invalid_properties.push('invalid value for "port_restriction", must be greater than or equal to 1.')
      end

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      return false if @account.nil?
      return false if @name.nil?
      return false if !@port_restriction.nil? && @port_restriction > 65535
      return false if !@port_restriction.nil? && @port_restriction < 1
      true
    end

    # Custom attribute writer method with validation
    # @param [Object] port_restriction Value to be assigned
    def port_restriction=(port_restriction)
      if !port_restriction.nil? && port_restriction > 65535
        fail ArgumentError, 'invalid value for "port_restriction", must be smaller than or equal to 65535.'
      end

      if !port_restriction.nil? && port_restriction < 1
        fail ArgumentError, 'invalid value for "port_restriction", must be greater than or equal to 1.'
      end

      @port_restriction = port_restriction
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          account == o.account &&
          description == o.description &&
          enabled == o.enabled &&
          host_restriction == o.host_restriction &&
          id == o.id &&
          links == o.links &&
          name == o.name &&
          port_restriction == o.port_restriction
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Fixnum] Hash code
    def hash
      [account, description, enabled, host_restriction, id, links, name, port_restriction].hash
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)
      self.class.swagger_types.each_pair do |key, type|
        if type =~ /\AArray<(.*)>/i
          # check to ensure the input is an array given that the the attribute
          # is documented as an array but the input is not
          if attributes[self.class.attribute_map[key]].is_a?(Array)
            self.send("#{key}=", attributes[self.class.attribute_map[key]].map { |v| _deserialize($1, v) })
          end
        elsif !attributes[self.class.attribute_map[key]].nil?
          self.send("#{key}=", _deserialize(type, attributes[self.class.attribute_map[key]]))
        end # or else data not found in attributes(hash), not an issue as the data can be optional
      end

      self
    end

    # Deserializes the data based on type
    # @param string type Data type
    # @param string value Value to be deserialized
    # @return [Object] Deserialized data
    def _deserialize(type, value)
      case type.to_sym
      when :DateTime
        DateTime.parse(value)
      when :Date
        Date.parse(value)
      when :String
        value.to_s
      when :Integer
        value.to_i
      when :Float
        value.to_f
      when :BOOLEAN
        if value.to_s =~ /\A(true|t|yes|y|1)\z/i
          true
        else
          false
        end
      when :Object
        # generic object (usually a Hash), return directly
        value
      when /\AArray<(?<inner_type>.+)>\z/
        inner_type = Regexp.last_match[:inner_type]
        value.map { |v| _deserialize(inner_type, v) }
      when /\AHash<(?<k_type>.+?), (?<v_type>.+)>\z/
        k_type = Regexp.last_match[:k_type]
        v_type = Regexp.last_match[:v_type]
        {}.tap do |hash|
          value.each do |k, v|
            hash[_deserialize(k_type, k)] = _deserialize(v_type, v)
          end
        end
      else # model
        temp_model = Rapid7VmConsole.const_get(type).new
        temp_model.build_from_hash(value)
      end
    end

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # to_body is an alias to to_hash (backward compatibility)
    # @return [Hash] Returns the object in the form of hash
    def to_body
      to_hash
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        next if value.nil?
        hash[param] = _to_hash(value)
      end
      hash
    end

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map { |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        {}.tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end
  end
end
