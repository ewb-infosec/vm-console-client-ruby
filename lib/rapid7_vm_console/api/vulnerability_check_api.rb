=begin
Ruby InsightVM API Client

OpenAPI spec version: 3
Contact: support@rapid7.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.0

=end

require 'uri'

module Rapid7VmConsole
  class VulnerabilityCheckApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Check Types
    # Returns the vulnerability check types. The type groups related vulnerability checks by their purpose, property, or related characteristic.
    # @param [Hash] opts the optional parameters
    # @return [ReferencesWithVulnerabilityCheckTypeIDLink]
    def get_vulnerability_check_types(opts = {})
      data, _status_code, _headers = get_vulnerability_check_types_with_http_info(opts)
      data
    end

    # Check Types
    # Returns the vulnerability check types. The type groups related vulnerability checks by their purpose, property, or related characteristic.
    # @param [Hash] opts the optional parameters
    # @return [Array<(ReferencesWithVulnerabilityCheckTypeIDLink, Fixnum, Hash)>] ReferencesWithVulnerabilityCheckTypeIDLink data, response status code and response headers
    def get_vulnerability_check_types_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: VulnerabilityCheckApi.get_vulnerability_check_types ...'
      end
      # resource path
      local_var_path = '/api/3/vulnerability_checks_types'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json;charset=UTF-8'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ReferencesWithVulnerabilityCheckTypeIDLink')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: VulnerabilityCheckApi#get_vulnerability_check_types\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Checks
    # Returns vulnerability checks. Optional search and filtering parameters may be supplied to refine the results. Searching allows full text search of the vulnerability details a check is related to.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :search Vulnerability search term to find vulnerability checks for. e.g. &#x60;\&quot;ssh\&quot;&#x60;.
    # @option opts [BOOLEAN] :safe Whether to return vulnerability checks that are considered \&quot;safe\&quot; to run. Defaults to return safe and unsafe checks.
    # @option opts [BOOLEAN] :potential Whether to only return checks that result in potentially vulnerable results. Defaults to return all checks.
    # @option opts [BOOLEAN] :requires_credentials Whether to only return checks that require credentials in order to successfully execute. Defaults to return all checks.
    # @option opts [BOOLEAN] :unique Whether to only return checks that guarantee to be executed once-and-only once on a host resulting in a unique result. False returns checks that can result in multiple occurrences of the same vulnerability on a host.
    # @option opts [String] :type The type of vulnerability checks to return. See &lt;a href&#x3D;\&quot;#operation/vulnerabilityCheckTypesUsingGET\&quot;&gt;Check Types&lt;/a&gt; for all available types.
    # @option opts [Integer] :page The index of the page (zero-based) to retrieve. (default to 0)
    # @option opts [Integer] :size The number of records per page to retrieve. (default to 10)
    # @option opts [Array<String>] :sort The criteria to sort the records by, in the format: &#x60;property[,ASC|DESC]&#x60;. The default sort order is ascending. Multiple sort criteria can be specified using multiple sort query parameters.
    # @return [PageOfVulnerabilityCheck]
    def get_vulnerability_checks(opts = {})
      data, _status_code, _headers = get_vulnerability_checks_with_http_info(opts)
      data
    end

    # Checks
    # Returns vulnerability checks. Optional search and filtering parameters may be supplied to refine the results. Searching allows full text search of the vulnerability details a check is related to.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :search Vulnerability search term to find vulnerability checks for. e.g. &#x60;\&quot;ssh\&quot;&#x60;.
    # @option opts [BOOLEAN] :safe Whether to return vulnerability checks that are considered \&quot;safe\&quot; to run. Defaults to return safe and unsafe checks.
    # @option opts [BOOLEAN] :potential Whether to only return checks that result in potentially vulnerable results. Defaults to return all checks.
    # @option opts [BOOLEAN] :requires_credentials Whether to only return checks that require credentials in order to successfully execute. Defaults to return all checks.
    # @option opts [BOOLEAN] :unique Whether to only return checks that guarantee to be executed once-and-only once on a host resulting in a unique result. False returns checks that can result in multiple occurrences of the same vulnerability on a host.
    # @option opts [String] :type The type of vulnerability checks to return. See &lt;a href&#x3D;\&quot;#operation/vulnerabilityCheckTypesUsingGET\&quot;&gt;Check Types&lt;/a&gt; for all available types.
    # @option opts [Integer] :page The index of the page (zero-based) to retrieve.
    # @option opts [Integer] :size The number of records per page to retrieve.
    # @option opts [Array<String>] :sort The criteria to sort the records by, in the format: &#x60;property[,ASC|DESC]&#x60;. The default sort order is ascending. Multiple sort criteria can be specified using multiple sort query parameters.
    # @return [Array<(PageOfVulnerabilityCheck, Fixnum, Hash)>] PageOfVulnerabilityCheck data, response status code and response headers
    def get_vulnerability_checks_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: VulnerabilityCheckApi.get_vulnerability_checks ...'
      end
      # resource path
      local_var_path = '/api/3/vulnerability_checks'

      # query parameters
      query_params = {}
      query_params[:'search'] = opts[:'search'] if !opts[:'search'].nil?
      query_params[:'safe'] = opts[:'safe'] if !opts[:'safe'].nil?
      query_params[:'potential'] = opts[:'potential'] if !opts[:'potential'].nil?
      query_params[:'requiresCredentials'] = opts[:'requires_credentials'] if !opts[:'requires_credentials'].nil?
      query_params[:'unique'] = opts[:'unique'] if !opts[:'unique'].nil?
      query_params[:'type'] = opts[:'type'] if !opts[:'type'].nil?
      query_params[:'page'] = opts[:'page'] if !opts[:'page'].nil?
      query_params[:'size'] = opts[:'size'] if !opts[:'size'].nil?
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if !opts[:'sort'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json;charset=UTF-8'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageOfVulnerabilityCheck')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: VulnerabilityCheckApi#get_vulnerability_checks\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Vulnerability Checks
    # Returns the vulnerability checks that assess for a specific vulnerability during a scan.
    # @param id The identifier of the vulnerability.
    # @param [Hash] opts the optional parameters
    # @return [ReferencesWithVulnerabilityCheckIDLink]
    def get_vulnerability_checks_for_vulnerability(id, opts = {})
      data, _status_code, _headers = get_vulnerability_checks_for_vulnerability_with_http_info(id, opts)
      data
    end

    # Vulnerability Checks
    # Returns the vulnerability checks that assess for a specific vulnerability during a scan.
    # @param id The identifier of the vulnerability.
    # @param [Hash] opts the optional parameters
    # @return [Array<(ReferencesWithVulnerabilityCheckIDLink, Fixnum, Hash)>] ReferencesWithVulnerabilityCheckIDLink data, response status code and response headers
    def get_vulnerability_checks_for_vulnerability_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: VulnerabilityCheckApi.get_vulnerability_checks_for_vulnerability ...'
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling VulnerabilityCheckApi.get_vulnerability_checks_for_vulnerability"
      end
      # resource path
      local_var_path = '/api/3/vulnerabilities/{id}/checks'.sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json;charset=UTF-8'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ReferencesWithVulnerabilityCheckIDLink')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: VulnerabilityCheckApi#get_vulnerability_checks_for_vulnerability\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Check
    # Returns the vulnerability check.
    # @param id The identifier of the vulnerability check.
    # @param [Hash] opts the optional parameters
    # @return [VulnerabilityCheck]
    def vulnerability_check(id, opts = {})
      data, _status_code, _headers = vulnerability_check_with_http_info(id, opts)
      data
    end

    # Check
    # Returns the vulnerability check.
    # @param id The identifier of the vulnerability check.
    # @param [Hash] opts the optional parameters
    # @return [Array<(VulnerabilityCheck, Fixnum, Hash)>] VulnerabilityCheck data, response status code and response headers
    def vulnerability_check_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: VulnerabilityCheckApi.vulnerability_check ...'
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling VulnerabilityCheckApi.vulnerability_check"
      end
      # resource path
      local_var_path = '/api/3/vulnerability_checks/{id}'.sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json;charset=UTF-8'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'VulnerabilityCheck')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: VulnerabilityCheckApi#vulnerability_check\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
