=begin
Ruby InsightVM API Client

OpenAPI spec version: 3
Contact: support@rapid7.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.0

=end

require 'uri'

module Rapid7VmConsole
  class CredentialApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Shared Credentials
    # Creates a new shared credential.
    # @param [Hash] opts the optional parameters
    # @option opts [SharedCredential] :credential The specification of a shared credential.
    # @return [CreatedReferenceCredentialIDLink]
    def create_shared_credential(opts = {})
      data, _status_code, _headers = create_shared_credential_with_http_info(opts)
      data
    end

    # Shared Credentials
    # Creates a new shared credential.
    # @param [Hash] opts the optional parameters
    # @option opts [SharedCredential] :credential The specification of a shared credential.
    # @return [Array<(CreatedReferenceCredentialIDLink, Fixnum, Hash)>] CreatedReferenceCredentialIDLink data, response status code and response headers
    def create_shared_credential_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CredentialApi.create_shared_credential ...'
      end
      # resource path
      local_var_path = '/api/3/shared_credentials'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json;charset=UTF-8'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'credential'])
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CreatedReferenceCredentialIDLink')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CredentialApi#create_shared_credential\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Shared Credentials
    # Deletes all shared credentials.
    # @param [Hash] opts the optional parameters
    # @return [Links]
    def delete_all_shared_credentials(opts = {})
      data, _status_code, _headers = delete_all_shared_credentials_with_http_info(opts)
      data
    end

    # Shared Credentials
    # Deletes all shared credentials.
    # @param [Hash] opts the optional parameters
    # @return [Array<(Links, Fixnum, Hash)>] Links data, response status code and response headers
    def delete_all_shared_credentials_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CredentialApi.delete_all_shared_credentials ...'
      end
      # resource path
      local_var_path = '/api/3/shared_credentials'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json;charset=UTF-8'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Links')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CredentialApi#delete_all_shared_credentials\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Shared Credential
    # Deletes the specified shared scan credential.
    # @param id The identifier of the credential.
    # @param [Hash] opts the optional parameters
    # @return [Links]
    def delete_shared_credential(id, opts = {})
      data, _status_code, _headers = delete_shared_credential_with_http_info(id, opts)
      data
    end

    # Shared Credential
    # Deletes the specified shared scan credential.
    # @param id The identifier of the credential.
    # @param [Hash] opts the optional parameters
    # @return [Array<(Links, Fixnum, Hash)>] Links data, response status code and response headers
    def delete_shared_credential_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CredentialApi.delete_shared_credential ...'
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling CredentialApi.delete_shared_credential"
      end
      # resource path
      local_var_path = '/api/3/shared_credentials/{id}'.sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json;charset=UTF-8'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Links')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CredentialApi#delete_shared_credential\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Shared Credential
    # Retrieves the specified shared credential.
    # @param id The identifier of the credential.
    # @param [Hash] opts the optional parameters
    # @return [SharedCredential]
    def get_shared_credential(id, opts = {})
      data, _status_code, _headers = get_shared_credential_with_http_info(id, opts)
      data
    end

    # Shared Credential
    # Retrieves the specified shared credential.
    # @param id The identifier of the credential.
    # @param [Hash] opts the optional parameters
    # @return [Array<(SharedCredential, Fixnum, Hash)>] SharedCredential data, response status code and response headers
    def get_shared_credential_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CredentialApi.get_shared_credential ...'
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling CredentialApi.get_shared_credential"
      end
      # resource path
      local_var_path = '/api/3/shared_credentials/{id}'.sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json;charset=UTF-8'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SharedCredential')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CredentialApi#get_shared_credential\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Shared Credentials
    # Retrieves all defined shared credential resources.
    # @param [Hash] opts the optional parameters
    # @return [ResourcesSharedCredential]
    def get_shared_credentials(opts = {})
      data, _status_code, _headers = get_shared_credentials_with_http_info(opts)
      data
    end

    # Shared Credentials
    # Retrieves all defined shared credential resources.
    # @param [Hash] opts the optional parameters
    # @return [Array<(ResourcesSharedCredential, Fixnum, Hash)>] ResourcesSharedCredential data, response status code and response headers
    def get_shared_credentials_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CredentialApi.get_shared_credentials ...'
      end
      # resource path
      local_var_path = '/api/3/shared_credentials'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json;charset=UTF-8'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ResourcesSharedCredential')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CredentialApi#get_shared_credentials\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Shared Credential
    # Updates the specified shared credential.
    # @param id The identifier of the credential.
    # @param [Hash] opts the optional parameters
    # @option opts [SharedCredential] :credential The specification of the shared credential to update.
    # @return [Links]
    def update_shared_credential(id, opts = {})
      data, _status_code, _headers = update_shared_credential_with_http_info(id, opts)
      data
    end

    # Shared Credential
    # Updates the specified shared credential.
    # @param id The identifier of the credential.
    # @param [Hash] opts the optional parameters
    # @option opts [SharedCredential] :credential The specification of the shared credential to update.
    # @return [Array<(Links, Fixnum, Hash)>] Links data, response status code and response headers
    def update_shared_credential_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CredentialApi.update_shared_credential ...'
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling CredentialApi.update_shared_credential"
      end
      # resource path
      local_var_path = '/api/3/shared_credentials/{id}'.sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json;charset=UTF-8'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'credential'])
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Links')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CredentialApi#update_shared_credential\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
