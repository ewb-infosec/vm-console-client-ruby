=begin
Ruby InsightVM API Client

OpenAPI spec version: 3
Contact: support@rapid7.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Rapid7VmConsole::VulnerabilityExceptionApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'VulnerabilityExceptionApi' do
  before do
    # run before each test
    @instance = Rapid7VmConsole::VulnerabilityExceptionApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of VulnerabilityExceptionApi' do
    it 'should create an instance of VulnerabilityExceptionApi' do
      expect(@instance).to be_instance_of(Rapid7VmConsole::VulnerabilityExceptionApi)
    end
  end

  # unit tests for create_vulnerability_exception
  # Exceptions
  # Creates a vulnerability exception.
  # @param [Hash] opts the optional parameters
  # @option opts [VulnerabilityException] :vulnerability_exception The vulnerability exception to create.
  # @return [CreatedReferenceVulnerabilityExceptionIDLink]
  describe 'create_vulnerability_exception test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_vulnerability_exception
  # Exception
  # Returns an exception made on a vulnerability.
  # @param id The identifier of the vulnerability exception.
  # @param [Hash] opts the optional parameters
  # @return [VulnerabilityException]
  describe 'get_vulnerability_exception test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_vulnerability_exception_expiration
  # Exception Expiration
  # Get the expiration date for a vulnerability exception.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'get_vulnerability_exception_expiration test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_vulnerability_exceptions
  # Exceptions
  # Returns all exceptions defined on vulnerabilities.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page The index of the page (zero-based) to retrieve.
  # @option opts [Integer] :size The number of records per page to retrieve.
  # @option opts [Array<String>] :sort The criteria to sort the records by, in the format: &#x60;property[,ASC|DESC]&#x60;. The default sort order is ascending. Multiple sort criteria can be specified using multiple sort query parameters.
  # @return [PageOfVulnerabilityException]
  describe 'get_vulnerability_exceptions test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remove_vulnerability_exception
  # Exception
  # Removes an exception made on a vulnerability.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @return [Links]
  describe 'remove_vulnerability_exception test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_vulnerability_exception_expiration
  # Exception Expiration
  # Set the expiration date for a vulnerability exception. This must be a valid date in the future.
  # @param id id
  # @param param1 param1
  # @param [Hash] opts the optional parameters
  # @return [Links]
  describe 'update_vulnerability_exception_expiration test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_vulnerability_exception_status
  # Exception Status
  # Update the status of the vulnerability exception. The status can be one of: &#x60;\&quot;recall\&quot;&#x60;, &#x60;\&quot;approve\&quot;&#x60;, or &#x60;\&quot;reject\&quot;&#x60;.
  # @param id id
  # @param status Exception Status
  # @param [Hash] opts the optional parameters
  # @option opts [String] :param2 param2
  # @return [Links]
  describe 'update_vulnerability_exception_status test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
