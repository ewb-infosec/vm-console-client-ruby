=begin
Ruby InsightVM API Client

OpenAPI spec version: 3
Contact: support@rapid7.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Rapid7VmConsole::PolicyOverrideApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PolicyOverrideApi' do
  before do
    # run before each test
    @instance = Rapid7VmConsole::PolicyOverrideApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PolicyOverrideApi' do
    it 'should create an instance of PolicyOverrideApi' do
      expect(@instance).to be_instance_of(Rapid7VmConsole::PolicyOverrideApi)
    end
  end

  # unit tests for create_policy_override
  # Policy Overrides
  # Submit a policy override. The policy override can be submitted or it can be submitted and approved in a single request.
  # @param [Hash] opts the optional parameters
  # @option opts [PolicyOverride] :policy_override The specification of a policy override. Allows users to override the compliance result of a policy rule.
  # @return [CreatedReferencePolicyOverrideIDLink]
  describe 'create_policy_override test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_policy_override
  # Policy Override
  # Removes a policy override created for a policy rule.
  # @param id The identifier of the policy override.
  # @param [Hash] opts the optional parameters
  # @return [Links]
  describe 'delete_policy_override test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_asset_policy_overrides
  # Asset Policy Overrides
  # Retrieves policy overrides defined on policy rules for the specified asset.
  # @param id The identifier of the asset.
  # @param [Hash] opts the optional parameters
  # @return [ResourcesPolicyOverride]
  describe 'get_asset_policy_overrides test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_policy_override
  # Policy Override
  # Retrieve the specified policy override.
  # @param id The identifier of the policy override.
  # @param [Hash] opts the optional parameters
  # @return [PolicyOverride]
  describe 'get_policy_override test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_policy_override_expiration
  # Policy Override Expiration
  # Get the expiration date for a policy override.
  # @param id The identifier of the policy override.
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'get_policy_override_expiration test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_policy_overrides
  # Policy Overrides
  # Retrieves policy overrides defined on policy rules.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page The index of the page (zero-based) to retrieve.
  # @option opts [Integer] :size The number of records per page to retrieve.
  # @option opts [Array<String>] :sort The criteria to sort the records by, in the format: &#x60;property[,ASC|DESC]&#x60;. The default sort order is ascending. Multiple sort criteria can be specified using multiple sort query parameters.
  # @return [PageOfPolicyOverride]
  describe 'get_policy_overrides test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_policy_override_expiration
  # Policy Override Expiration
  # Set the expiration date for a policy override. This must be a valid date in the future.
  # @param id The identifier of the policy override.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expiration The date the policy override is set to expire. Date is represented in ISO 8601 format.
  # @return [Links]
  describe 'set_policy_override_expiration test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_policy_override_status
  # Policy Override Status
  # Update the status of the specified policy override. The status can be one of the following: &#x60;\&quot;recall\&quot;&#x60;, &#x60;\&quot;approve\&quot;&#x60;, or &#x60;\&quot;reject\&quot;&#x60;.
  # @param id The identifier of the policy override.
  # @param status Policy Override Status
  # @param [Hash] opts the optional parameters
  # @option opts [String] :comment A comment describing the change of the policy override status.
  # @return [nil]
  describe 'set_policy_override_status test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
