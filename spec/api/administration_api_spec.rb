=begin
Ruby InsightVM API Client

OpenAPI spec version: 3
Contact: support@rapid7.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Rapid7VmConsole::AdministrationApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'AdministrationApi' do
  before do
    # run before each test
    @instance = Rapid7VmConsole::AdministrationApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AdministrationApi' do
    it 'should create an instance of AdministrationApi' do
      expect(@instance).to be_instance_of(Rapid7VmConsole::AdministrationApi)
    end
  end

  # unit tests for activate_license
  # License
  # Licenses the product with an activation key or a provided license file. If both are provided, the license file is preferred. &lt;span class&#x3D;\&quot;authorization\&quot;&gt;Global Administrator&lt;/span&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [File] :license The contents of a license (.lic) file.
  # @option opts [String] :key A license activation key.
  # @return [Links]
  describe 'activate_license test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for execute_command
  # Console Commands
  # Executes a console command against the Security Console. &lt;span class&#x3D;\&quot;authorization\&quot;&gt;Global Administrator&lt;/span&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :command The console command to execute.
  # @return [ConsoleCommandOutput]
  describe 'execute_command test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_info
  # Information
  # Returns system details, including host and version information.
  # @param [Hash] opts the optional parameters
  # @return [Info]
  describe 'get_info test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_license
  # License
  # Returns the enabled features and limits of the current license. &lt;span class&#x3D;\&quot;authorization\&quot;&gt;Global Administrator&lt;/span&gt;
  # @param [Hash] opts the optional parameters
  # @return [License]
  describe 'get_license test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_properties
  # Properties
  # Returns system details, including host and version information.
  # @param [Hash] opts the optional parameters
  # @return [EnvironmentProperties]
  describe 'get_properties test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_settings
  # Settings
  # Returns the current administration settings. &lt;span class&#x3D;\&quot;authorization\&quot;&gt;Global Administrator&lt;/span&gt;
  # @param [Hash] opts the optional parameters
  # @return [Settings]
  describe 'get_settings test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
