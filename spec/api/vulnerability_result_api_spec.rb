=begin
Ruby InsightVM API Client

OpenAPI spec version: 3
Contact: support@rapid7.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Rapid7VmConsole::VulnerabilityResultApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'VulnerabilityResultApi' do
  before do
    # run before each test
    @instance = Rapid7VmConsole::VulnerabilityResultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of VulnerabilityResultApi' do
    it 'should create an instance of VulnerabilityResultApi' do
      expect(@instance).to be_instance_of(Rapid7VmConsole::VulnerabilityResultApi)
    end
  end

  # unit tests for create_vulnerability_validation
  # Asset Vulnerability Validations
  # Creates a vulnerability validation for a vulnerability on an asset. The validation signifies that the vulnerability has been confirmed exploitable by an external tool, such as &lt;a target&#x3D;\&quot;_blank\&quot; href&#x3D;\&quot;https://www.metasploit.com\&quot;&gt;Metasploit&lt;/a&gt;.
  # @param id The identifier of the asset.
  # @param vulnerability_id The identifier of the vulnerability.
  # @param [Hash] opts the optional parameters
  # @option opts [VulnerabilityValidationResource] :validation A vulnerability validation for a vulnerability on an asset. The  validation signifies that the vulnerability has been confirmed exploitable by an external tool, such as &lt;a target&#x3D;\&quot;_blank\&quot; href&#x3D;\&quot;https://www.metasploit.com\&quot;&gt;Metasploit&lt;/a&gt;.
  # @return [CreatedReferenceVulnerabilityValidationIDLink]
  describe 'create_vulnerability_validation test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_vulnerability_validation
  # Asset Vulnerability Validation
  # Removes a vulnerability validation for a vulnerability from an asset.
  # @param id The identifier of the asset.
  # @param vulnerability_id The identifier of the vulnerability.
  # @param validation_id The identifier of the vulnerability validation.
  # @param [Hash] opts the optional parameters
  # @return [Links]
  describe 'delete_vulnerability_validation test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_asset_service_vulnerabilities
  # Asset Service Vulnerabilities
  # Retrieves the vulnerabilities present on a service running on an asset. A finding may be &#x60;invulnerable&#x60; if all instances on the service have exceptions applied.
  # @param id The identifier of the asset.
  # @param protocol The protocol of the service.
  # @param port The port of the service.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page The index of the page (zero-based) to retrieve.
  # @option opts [Integer] :size The number of records per page to retrieve.
  # @option opts [Array<String>] :sort The criteria to sort the records by, in the format: &#x60;property[,ASC|DESC]&#x60;. The default sort order is ascending. Multiple sort criteria can be specified using multiple sort query parameters.
  # @return [PageOfVulnerabilityFinding]
  describe 'get_asset_service_vulnerabilities test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_asset_vulnerabilities
  # Asset Vulnerabilities
  # Retrieves all vulnerability findings on an asset. A finding may be &#x60;invulnerable&#x60; if all instances have exceptions applied.
  # @param id The identifier of the asset.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page The index of the page (zero-based) to retrieve.
  # @option opts [Integer] :size The number of records per page to retrieve.
  # @option opts [Array<String>] :sort The criteria to sort the records by, in the format: &#x60;property[,ASC|DESC]&#x60;. The default sort order is ascending. Multiple sort criteria can be specified using multiple sort query parameters.
  # @return [PageOfVulnerabilityFinding]
  describe 'get_asset_vulnerabilities test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_asset_vulnerability
  # Asset Vulnerability
  # Retrieves the details for a vulnerability finding on an asset.
  # @param id The identifier of the asset.
  # @param vulnerability_id The identifier of the vulnerability.
  # @param [Hash] opts the optional parameters
  # @return [VulnerabilityFinding]
  describe 'get_asset_vulnerability test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_vulnerability_validation
  # Asset Vulnerability Validation
  # Returns a vulnerability validation for a vulnerability on an asset. The asset must be currently vulnerable to the validated vulnerable for the validation to be returned.
  # @param id The identifier of the asset.
  # @param vulnerability_id The identifier of the vulnerability.
  # @param validation_id The identifier of the vulnerability validation.
  # @param [Hash] opts the optional parameters
  # @return [VulnerabilityValidationResource]
  describe 'get_vulnerability_validation test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_vulnerability_validations
  # Asset Vulnerability Validations
  # Returns all vulnerability validations for a vulnerability on an asset. The asset must be currently vulnerable to the validated vulnerable for the validation to be returned.
  # @param id The identifier of the asset.
  # @param vulnerability_id The identifier of the vulnerability.
  # @param [Hash] opts the optional parameters
  # @return [ResourcesVulnerabilityValidationResource]
  describe 'get_vulnerability_validations test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
