=begin
Ruby InsightVM API Client

OpenAPI spec version: 3
Contact: support@rapid7.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Rapid7VmConsole::VulnerabilityApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'VulnerabilityApi' do
  before do
    # run before each test
    @instance = Rapid7VmConsole::VulnerabilityApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of VulnerabilityApi' do
    it 'should create an instance of VulnerabilityApi' do
      expect(@instance).to be_instance_of(Rapid7VmConsole::VulnerabilityApi)
    end
  end

  # unit tests for get_affected_assets
  # Vulnerability Affected Assets
  # Get the assets affected by the vulnerability.
  # @param id The identifier of the vulnerability.
  # @param [Hash] opts the optional parameters
  # @return [ReferencesWithAssetIDLink]
  describe 'get_affected_assets test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_exploit
  # Exploit
  # Returns the details for an exploit.
  # @param id The identifier of the exploit.
  # @param [Hash] opts the optional parameters
  # @return [Exploit]
  describe 'get_exploit test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_exploit_vulnerabilities
  # Exploitable Vulnerabilities
  # Returns the vulnerabilities exploitable to a exploit.
  # @param id The identifier of the exploit.
  # @param [Hash] opts the optional parameters
  # @return [ReferencesWithVulnerabilityNaturalIDLink]
  describe 'get_exploit_vulnerabilities test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_exploits
  # Exploits
  # Returns all known exploits.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page The index of the page (zero-based) to retrieve.
  # @option opts [Integer] :size The number of records per page to retrieve.
  # @option opts [Array<String>] :sort The criteria to sort the records by, in the format: &#x60;property[,ASC|DESC]&#x60;. The default sort order is ascending. Multiple sort criteria can be specified using multiple sort query parameters.
  # @return [PageOfExploit]
  describe 'get_exploits test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_malware_kit
  # Malware Kit
  # Returns the details for a malware kit.
  # @param id The identifier of the malware kit.
  # @param [Hash] opts the optional parameters
  # @return [MalwareKit]
  describe 'get_malware_kit test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_malware_kit_vulnerabilities
  # Malware Kit Vulnerabilities
  # Returns the vulnerabilities that are susceptible to being attacked by a malware kit.
  # @param id The identifier of the malware kit.
  # @param [Hash] opts the optional parameters
  # @return [ReferencesWithVulnerabilityNaturalIDLink]
  describe 'get_malware_kit_vulnerabilities test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_malware_kits
  # Malware Kits
  # Returns all known malware kits.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page The index of the page (zero-based) to retrieve.
  # @option opts [Integer] :size The number of records per page to retrieve.
  # @option opts [Array<String>] :sort The criteria to sort the records by, in the format: &#x60;property[,ASC|DESC]&#x60;. The default sort order is ascending. Multiple sort criteria can be specified using multiple sort query parameters.
  # @return [PageOfMalwareKit]
  describe 'get_malware_kits test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_prerequisite_solutions
  # Solution Prerequisites
  # Returns the solutions that must be executed in order for a solution to resolve a vulnerability.
  # @param id The identifier of the solution.
  # @param [Hash] opts the optional parameters
  # @return [ReferencesWithSolutionNaturalIDLink]
  describe 'get_prerequisite_solutions test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_solution
  # Solution
  # Returns the details for a solution that can remediate one or more vulnerabilities.
  # @param id The identifier of the solution.
  # @param [Hash] opts the optional parameters
  # @return [Solution]
  describe 'get_solution test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_solutions
  # Solutions
  # Returns the details for all solutions.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page The index of the page (zero-based) to retrieve.
  # @option opts [Integer] :size The number of records per page to retrieve.
  # @option opts [Array<String>] :sort The criteria to sort the records by, in the format: &#x60;property[,ASC|DESC]&#x60;. The default sort order is ascending. Multiple sort criteria can be specified using multiple sort query parameters.
  # @return [ResourcesSolution]
  describe 'get_solutions test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_superseded_solutions
  # Superseded Solutions
  # Returns the solutions that are superseded by this solution.
  # @param id The identifier of the solution.
  # @param [Hash] opts the optional parameters
  # @return [ResourcesSolution]
  describe 'get_superseded_solutions test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_superseding_solutions
  # Superseding Solutions
  # Returns the solutions that supersede this solution.
  # @param id The identifier of the solution.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :rollup Whether to return only highest-level \&quot;rollup\&quot; superseding solutions.
  # @return [ResourcesSolution]
  describe 'get_superseding_solutions test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_vulnerabilities
  # Vulnerabilities
  # Returns all vulnerabilities that can be assessed during a scan.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page The index of the page (zero-based) to retrieve.
  # @option opts [Integer] :size The number of records per page to retrieve.
  # @option opts [Array<String>] :sort The criteria to sort the records by, in the format: &#x60;property[,ASC|DESC]&#x60;. The default sort order is ascending. Multiple sort criteria can be specified using multiple sort query parameters.
  # @return [PageOfVulnerability]
  describe 'get_vulnerabilities test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_vulnerability
  # Vulnerability
  # Returns the details for a vulnerability.
  # @param id The identifier of the vulnerability.
  # @param [Hash] opts the optional parameters
  # @return [Vulnerability]
  describe 'get_vulnerability test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_vulnerability_categories
  # Categories
  # Returns all vulnerabilities categories that can be assigned to a vulnerability. These categories group and label vulnerabilities by general purpose, affected systems, vendor, etc.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page The index of the page (zero-based) to retrieve.
  # @option opts [Integer] :size The number of records per page to retrieve.
  # @option opts [Array<String>] :sort The criteria to sort the records by, in the format: &#x60;property[,ASC|DESC]&#x60;. The default sort order is ascending. Multiple sort criteria can be specified using multiple sort query parameters.
  # @return [PageOfVulnerabilityCategory]
  describe 'get_vulnerability_categories test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_vulnerability_category
  # Category
  # Returns the details for a vulnerability category.
  # @param id The identifier of the vulnerability category.
  # @param [Hash] opts the optional parameters
  # @return [VulnerabilityCategory]
  describe 'get_vulnerability_category test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_vulnerability_category_vulnerabilities
  # Category Vulnerabilities
  # Returns hypermedia links to the vulnerabilities that are in a vulnerability category.
  # @param id The identifier of the vulnerability category.
  # @param [Hash] opts the optional parameters
  # @return [ReferencesWithVulnerabilityNaturalIDLink]
  describe 'get_vulnerability_category_vulnerabilities test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_vulnerability_exploits
  # Vulnerability Exploits
  # Returns the exploits that can be used to exploit a vulnerability.
  # @param id The identifier of the vulnerability.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page The index of the page (zero-based) to retrieve.
  # @option opts [Integer] :size The number of records per page to retrieve.
  # @option opts [Array<String>] :sort The criteria to sort the records by, in the format: &#x60;property[,ASC|DESC]&#x60;. The default sort order is ascending. Multiple sort criteria can be specified using multiple sort query parameters.
  # @return [PageOfExploit]
  describe 'get_vulnerability_exploits test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_vulnerability_malware_kits
  # Vulnerability Malware Kits
  # Returns the malware kits that are known to be used to exploit the vulnerability.
  # @param id The identifier of the vulnerability.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page The index of the page (zero-based) to retrieve.
  # @option opts [Integer] :size The number of records per page to retrieve.
  # @option opts [Array<String>] :sort The criteria to sort the records by, in the format: &#x60;property[,ASC|DESC]&#x60;. The default sort order is ascending. Multiple sort criteria can be specified using multiple sort query parameters.
  # @return [PageOfMalwareKit]
  describe 'get_vulnerability_malware_kits test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_vulnerability_reference
  # Reference
  # Returns an external vulnerability reference.
  # @param id The identifier of the vulnerability reference.
  # @param [Hash] opts the optional parameters
  # @return [VulnerabilityReference]
  describe 'get_vulnerability_reference test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_vulnerability_reference_vulnerabilities
  # Reference Vulnerabilities
  # Returns the vulnerabilities that are referenced by an external reference.
  # @param id id
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page The index of the page (zero-based) to retrieve.
  # @option opts [Integer] :size The number of records per page to retrieve.
  # @option opts [Array<String>] :sort The criteria to sort the records by, in the format: &#x60;property[,ASC|DESC]&#x60;. The default sort order is ascending. Multiple sort criteria can be specified using multiple sort query parameters.
  # @return [PageOfVulnerability]
  describe 'get_vulnerability_reference_vulnerabilities test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_vulnerability_references
  # References
  # Returns the external references that may be associated to a vulnerability.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page The index of the page (zero-based) to retrieve.
  # @option opts [Integer] :size The number of records per page to retrieve.
  # @option opts [Array<String>] :sort The criteria to sort the records by, in the format: &#x60;property[,ASC|DESC]&#x60;. The default sort order is ascending. Multiple sort criteria can be specified using multiple sort query parameters.
  # @return [PageOfVulnerabilityReference]
  describe 'get_vulnerability_references test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_vulnerability_references1
  # Vulnerability References
  # Returns the external references that may be associated to a vulnerability.
  # @param id The identifier of the vulnerability.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page The index of the page (zero-based) to retrieve.
  # @option opts [Integer] :size The number of records per page to retrieve.
  # @option opts [Array<String>] :sort The criteria to sort the records by, in the format: &#x60;property[,ASC|DESC]&#x60;. The default sort order is ascending. Multiple sort criteria can be specified using multiple sort query parameters.
  # @return [PageOfVulnerabilityReference]
  describe 'get_vulnerability_references1 test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_vulnerability_solutions
  # Vulnerability Solutions
  # Returns all solutions (across all platforms) that may be used to remediate this vulnerability.
  # @param id The identifier of the vulnerability.
  # @param [Hash] opts the optional parameters
  # @return [ReferencesWithSolutionNaturalIDLink]
  describe 'get_vulnerability_solutions test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
