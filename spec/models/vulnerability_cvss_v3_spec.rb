=begin
Ruby InsightVM API Client

OpenAPI spec version: 3
Contact: support@rapid7.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for Rapid7VmConsole::VulnerabilityCvssV3
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'VulnerabilityCvssV3' do
  before do
    # run before each test
    @instance = Rapid7VmConsole::VulnerabilityCvssV3.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of VulnerabilityCvssV3' do
    it 'should create an instance of VulnerabilityCvssV3' do
      expect(@instance).to be_instance_of(Rapid7VmConsole::VulnerabilityCvssV3)
    end
  end
  describe 'test attribute "attack_complexity"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["L", "H"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.attack_complexity = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "attack_vector"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["N", "A", "L", "P"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.attack_vector = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "availability_impact"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["N", "L", "H"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.availability_impact = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "confidentiality_impact"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["N", "L", "H"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.confidentiality_impact = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "exploit_score"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "impact_score"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "integrity_impact"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["N", "L", "H"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.integrity_impact = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "privilege_required"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["N", "L", "H"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.privilege_required = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "scope"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["U", "C"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.scope = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "score"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "user_interaction"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["N", "R"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.user_interaction = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "vector"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end

